*
package com.company;

public class Main {

    public static void main(String[] args) {
        //System.out.println("Hello world");
        /*int age =30 , height =6, x=90,y=100;
        age= 35;
        System.out.println(+age);
        */
/*
        //variables
        int myAge = 30;
        int myFriendage = myAge;
        System.out.println(+myFriendage);
       /* Types of variable
       Local
       instance
       Static
        */
        //Local Variable - variable used inside the class cannot be used outside the class.
        /*public class{
            int x=12;
            System.out.println(+x);
        //Instance Variable- inside the main method
        /*
        public static void main(String[] args) {
        int b=40; // instance variable;
        System.out.println(m);
         System.out.println(y); // error
          System.out.println(b);

         /*

        // Static Variable
        static int y= 20; //it cannot be local
	// write
            */
/*

package com.company;

public class Main {

    public static void main(String args[]){
        byte age = 30;
        int viewscount = 132735165;
        long viewscounts = 132735165l;
        double weight = 50.5;
        float height = 60.0f;
        char alpha = 's';
        boolean id = true;
        System.out.println(+age);
        System.out.println(+viewscount);
        System.out.println(+viewscounts);
        System.out.println(+weight);
        System.out.println(+height);
        System.out.println(+alpha);
        System.out.println();


    }
}
*/

/* Prints the current time
package com.company;
import java.util.Date;

public class Main {

    public static void main(String args[]) {
        byte age = 30;
        Date now = new Date();
        now.getTime();
        System.out.println(now);

    }
}
*/

// Memory management
/*
package com.company;
import  java.awt.*;


public class Main {

    public static void main(String args[]) {
        Point point1 = new Point(3, 1);
        Point point2 = point1;
        point1.x = 4;
        System.out.println(point2);


    }
}

*/


//Operators- symbol to perform operations: +-*/ etc
/*
1 Unary -- Postfix =express ++, express--,prefix
2 Arithematic -
3 Shift
4 Relational
5 Bitwise
6 Logical
7 Ternary
8 Assignment

 */
/*
package com.company;
import  java.awt.*;


public class Main {

    public static void main(String args[]) {
        //unary operator
        int x=10;
        int y=20;
        System.out.println(x++); //10;
        System.out.println(x);//11
        System.out.println(++x);//12
        System.out.println(x);//12
        System.out.println(x--);//12
        System.out.println(x);//11
        System.out.println(--x); //10
        System.out.println(x); // 10
        System.out.println(x++ + ++y); // 10 +21
        System.out.println(10*10/5+3-1*4/2); //Multiplication and divison first
        System.out.println(((10*10)/5)+3-(1*(4/2))); //21
    }
}

*/
/*
package com.company;
import  java.awt.*;


public class Main {

    public static void main(String args[]) {
        int x =20;
        int y=10;
        int z=30;
        System.out.println(x<y && x<z); //false - logical and operation- in this only one condition is checked
        System.out.println(x<y & x<z); //false- bitwise and operation- both condition is checked
        System.out.println(x<y || x<z); //true - logical or operation-in this only one condition is checked
        System.out.println(x<y | x<z); //false- bitwise or operation - both condition is checked
        int max = (x<y)?x:y;
        System.out.println(max); //ternary operator o/p-10
        //assignment operator
        //shift operator

        //left shift operator : shifts all of bits values to the leftside for specified number of times


        System.out.println(10<<2); //10*2^2 = 10*4= 40
        System.out.println(20<<2); //20*2^2 = 80

        //Right shift operator = shifts right

        System.out.println(10>>2); //10/2^2 = 10/4= 2
        System.out.println(20>>2); //20/2^2 = 20/4= 5

       short s =20;
       short r =20;




    }
    }
*/


// Keywords
// types 1> Abstract-it can provide the implementation of the interface
// 2> catch- the exceptions generated by try statement
// 3> extends- indicates the class is derived from another class classA classB extends classA
// 4> implements- used to implements an interface
// 5> private, protect, static
// 6> super- used to refer to parent class objects

/*

//Strings
package com.company;
import  java.awt.*;
import java.util.Locale;


public class Main {

    public static void main(String args[]) {
        String hi= new String("hello ");
        String message= "hello Srinivas";
        System.out.println(message);
        System.out.println(hi);
        //concatination
        String messages= "hello Srinivas" + "How are you!!";
        System.out.println(messages);
        //methods
        System.out.println(message.endsWith("s"));
        System.out.println(message.toLowerCase(Locale.ROOT));
        System.out.println(message.toUpperCase(Locale.ROOT));
        System.out.println(message.length());
        System.out.println(message.indexOf("S"));
        System.out.println(message.startsWith("S"));


    }

    }
    */

/*
package com.company;
import  java.awt.*;
import java.util.Locale;


public class Main {

    public static void main(String args[]) {

        //System.out.println("hello world,\"hi\"");
        //System.out.println("c:Window\\filefolder\nsrinivas");

}
}
 */


/*
//Arrays
// 1-D
package com.company;
import  java.awt.*;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Locale;


public class Main {

    public static void main(String args[]) {
        int [] numbers = new int[6]; // int [] numbers = {1,2,3,4,5};
        numbers[0]=7;
        numbers[1]=4;
        numbers[2]=5;
        numbers[3]=6;
        numbers[4]=9;

      //  numbers[10]=3; // error outofbound

        System.out.println(numbers); //prints the array
        System.out.println(Arrays.toString(numbers));
        System.out.println(Array.getLength(numbers));
        Arrays.sort(numbers);




    }
}
*/


/*
2-D array

package com.company;
import  java.awt.*;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Locale;


public class Main {

    public static void main(String args[]) {
        int[][] numbers = new int[2][3]; // int [][] numbers = {{1,2,3},{4,5,6}};
        numbers[0][0] = 7;
        numbers[0][1] = 4;
        numbers[0][2] = 5;
        numbers[1][1] = 6;
        numbers[1][2] = 9;


        System.out.println(Arrays.deepToString(numbers));
    }
}
*/


/*

//Constants
package com.company;
import  java.awt.*;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Locale;


public class Main {

    public static void main(String args[]) {
    final float Pi = 3.145f; //cannnot be changed
    //Constabt means " cannot be changed
     // static means "static instance (in memory)

    }

}


 */
/*

//casting
package com.company;
import  java.awt.*;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Locale;


public class Main {

    public static void main(String args[]) {
        // double result = (double) 20 + (double) 5;
        //System.out.println(result);
        // Implicit casting (automatic)
       // short a = 2;
        //int y = a + 2;
        //byte> sort>int>....
        //double a= 1.55;
        //double y= a+2; // 2.0 +1.55
        //byte> sort > int > long > float >double
        //Explict Casting
        //Explict and implict casying can only happen between compatible types
        //double a= 1.55;
        //int y= (int)a+2; // 2.0 +1.55 loss of data




        System.out.println(y);
    }
}


*/



/*

package com.company;
import  java.awt.*;

import java.util.Arrays;


public class Main {

    public static void main(String args[]) {
        int roundoff = Math.round(2.5f);
        int ceiling = (int) Math.ceil(3.23f);
        int floors = (int) Math.floor(7.39);
        int maxs= (int) Math.max(9,7);
        double rand= Math.random();
        System.out.println(roundoff);//3
        System.out.println(ceiling);//4
        System.out.println(floors);//7
        System.out.println(maxs); //9
        System.out.println(rand); //0.5908979686

    }
}

 */


// Write a program to generate a random number 100 to 500
// output => Random values of type double between 100 to 500 : value
//           Random values of type int between 100 to 500 : value
/*
package com.company;
import  java.awt.*;

import java.util.Arrays;


public class Main {

    public static void main(String args[]) {


        int upperBound = 400;
        int lowerBound = 100;
        int number = lowerBound + (int) (Math.random() * ((upperBound - lowerBound) + 1));
        System.out.println(number);
    }
}
*/
package com.company;
        import  java.awt.*;

        import java.util.Arrays;


public class Main {

    public static void main(String args[]) {
        int max=400;
        int min=200;
        int upperBound = 500;
        int lowerBound = 100;
        int result=(int)(Math.random()*(max-min)+min);
        double number = lowerBound +  (Math.random() * ((upperBound - lowerBound) + 1));
        System.out.println("Random number of type double from"+max+"to" +min+"is");
        System.out.println(number);
        System.out.println("Random number of type int from"+lowerBound+"to" +upperBound+"is");
        System.out.println(result);
    }
}